## Author: Bartosz Chmielewski
## Create a website with startup configuration (Policies, Rules, DC setting)


## Define incapsula provider
##
terraform {
  required_providers {
    incapsula = {
      source = "imperva/incapsula"
      version = "3.21.0"
    }
  }
}

## Importing authentication details
##
provider "incapsula" {
  api_id = var.APIID
  api_key = var.APIKEY
}

## Create a website
##
resource "incapsula_site" "website" {
  domain = var.WebsiteFQDN
  data_storage_region = "EU"
  site_ip = var.WebsiteIP 
}


## Configure DC settings and setting origin pop to Warsaw
##
resource "incapsula_data_centers_configuration" "dc-config" {
  site_id = incapsula_site.website.id
  site_topology = "SINGLE_SERVER"


  data_center {
    name = "PrimaryDC"
    ip_mode = "MULTIPLE_IP"

    origin_server {
      address = var.WebsiteIP
      is_active = true
    }
    origin_pop = var.OriginPOP
    }
}

## Modify Website DDoS Settings
##
resource "incapsula_waf_security_rule" "ddos-settings" {
  site_id                = incapsula_site.website.id
  rule_id                = "api.threats.ddos"
  activation_mode        = "api.threats.ddos.activation_mode.auto"
  ddos_traffic_threshold = "100"
}

## Create WAF ACL Policy to block two specific IPs
##
resource "incapsula_policy" "waf-acl-policy" {
  name        = "Terraform ACL Policy"
  enabled     = true 
  policy_type = "ACL"
  description = "BCH. This policy has been generated by Terraform."
  policy_settings = <<POLICY
[
  {
    "settingsAction": "BLOCK",
    "policySettingType": "IP",
    "data": {
      "ips": [
        "109.12.1.150",
        "109.12.1.200"
      ]
    },
    "policyDataExceptions": []
  }
]
POLICY
}

## Attach the WAF ACL Policy to the new website
##
resource "incapsula_policy_asset_association" "terraform-policy-asset-association" { 
  policy_id = incapsula_policy.waf-acl-policy.id
  asset_id = incapsula_site.website.id
  asset_type = "WEBSITE"
}

## Create WAF Rules Policy in blocking mode with one exception in Illegal Resource Access
##
resource "incapsula_policy" "waf-policy" {
    name        = "Terraform WAF Policy"
    enabled     = true 
    policy_type = "WAF_RULES"
    description = "BCH. This policy has been generated by Terraform."
    policy_settings = <<POLICY
    [
    {
      "settingsAction": "BLOCK",
      "policySettingType": "REMOTE_FILE_INCLUSION"

    },
    {
      "settingsAction": "BLOCK",
      "policySettingType": "ILLEGAL_RESOURCE_ACCESS",
      "policyDataExceptions": [
        {
          "data": [
            {
              "exceptionType": "URL",
              "values": [
                "/custom_exception"
              ]
            }
          ]
        }
      ]
    },
    {
      "settingsAction": "BLOCK",
      "policySettingType": "CROSS_SITE_SCRIPTING"

    },
    {
      "settingsAction": "BLOCK",
      "policySettingType": "SQL_INJECTION"

    }
    ]
    POLICY
}

## Attach the WAF Rules Policy to the new website
##
resource "incapsula_policy_asset_association" "terraform-waf-policy-asset-association" { 
  policy_id = incapsula_policy.waf-policy.id
  asset_id = incapsula_site.website.id
  asset_type = "WEBSITE"
}


## Create new IncapRule to block traffic from outside to Poland and Germany.
##
resource "incapsula_incap_rule" "rule-geo" {
  name    = "Block Requests from outside of Poland and Germany"
  site_id = incapsula_site.website.id
  action  = "RULE_ACTION_BLOCK"
  filter  = "CountryCode != PL;DE"
}

## Create new IncapRule to add new "INCAPPOP" header with a POP name
##
resource "incapsula_incap_rule" "rule-addheader" {
  name    = "Add POP to the header"
  site_id = incapsula_site.website.id
  action           = "RULE_ACTION_REWRITE_HEADER"
  filter           = "Method == GET;POST"
  add_missing      = "true"
  rewrite_existing = "false"
  to               = "$pop"
  rewrite_name     = "INCAPPOP"

}




